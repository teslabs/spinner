<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="currsmp_8h" kind="file" language="C++">
    <compoundname>currsmp.h</compoundname>
    <includes local="no">zephyr/device.h</includes>
    <includes local="no">zephyr/types.h</includes>
    <incdepgraph>
      <node id="2">
        <label>zephyr/device.h</label>
      </node>
      <node id="1">
        <label>spinner/drivers/currsmp.h</label>
        <link refid="currsmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>zephyr/types.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcurrsmp__curr" prot="public">currsmp_curr</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* currsmp_regulation_cb_t) (void *ctx)</definition>
        <argsstring>)(void *ctx)</argsstring>
        <name>currsmp_regulation_cb_t</name>
        <briefdescription>
<para>Current sampling regulation callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="23" column="9" bodyfile="spinner/drivers/currsmp.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1gaf2f85d962769a3ddb170cec20f1db99f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_configure</definition>
        <argsstring>(const struct device *dev, currsmp_regulation_cb_t regulation_cb, void *ctx)</argsstring>
        <name>currsmp_configure</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" kindref="member">currsmp_regulation_cb_t</ref></type>
          <declname>regulation_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Configure current sampling device. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function needs to be called before calling <ref refid="group__spinner__drivers__currsmp_1ga6cbf8b1465a0876924ba505590f61a74" kindref="member">currsmp_start()</ref>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regulation_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called on each regulation cycle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback context. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="61" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga47e66494ce09fe36570899995b8b9ec1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_get_currents</definition>
        <argsstring>(const struct device *dev, struct currsmp_curr *curr)</argsstring>
        <name>currsmp_get_currents</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structcurrsmp__curr" kindref="compound">currsmp_curr</ref> *</type>
          <declname>curr</declname>
        </param>
        <briefdescription>
<para>Get phase currents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">curr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where phase currents will be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="76" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga7229cb4cb5fd5cc8d427924a0dd50d81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_set_sector</definition>
        <argsstring>(const struct device *dev, uint8_t sector)</argsstring>
        <name>currsmp_set_sector</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
<para>Set SV-PWM sector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sector</parametername>
</parameternamelist>
<parameterdescription>
<para>SV-PWM sector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="90" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1gadaf81f071fa59c5d707eee28a2e14a03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t currsmp_get_smp_time</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>currsmp_get_smp_time</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Obtain currents sampling time in nanoseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sampling time in nanoseconds (zero indicates error). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="104" column="24" bodyfile="spinner/drivers/currsmp.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga6cbf8b1465a0876924ba505590f61a74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_start</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>currsmp_start</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Start sampling currents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__spinner__drivers__currsmp_1ga52e2a7e19789e8d9b4733fc12246860b" kindref="member">currsmp_stop()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="118" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga52e2a7e19789e8d9b4733fc12246860b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_stop</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>currsmp_stop</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Stop sampling currents. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="130" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga8dad1c15188dec6dcbfacead9798b434" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_pause</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>currsmp_pause</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Pause current sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function can be used to prevent current sampling to call the regulation callback, thus allowing to adjust shared context.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__spinner__drivers__currsmp_1ga69e68b8277e8609a32dd769a315dfbb5" kindref="member">currsmp_resume()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="148" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group__spinner__drivers__currsmp_1ga69e68b8277e8609a32dd769a315dfbb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void currsmp_resume</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>currsmp_resume</name>
        <param>
          <type>const struct device *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Resume current sampling. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Current sampling device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="spinner/drivers/currsmp.h" line="160" column="20" bodyfile="spinner/drivers/currsmp.h" bodystart="160" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Current Sampling API.</para>
<para>Copyright (c) 2021 Teslabs Engineering S.L. SPDX-License-Identifier: Apache-2.0 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SPINNER_DRIVERS_CURRSMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SPINNER_DRIVERS_CURRSMP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;zephyr/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" kindref="member">currsmp_regulation_cb_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structcurrsmp__curr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurrsmp__curr" kindref="compound">currsmp_curr</ref><sp/>{</highlight></codeline>
<codeline lineno="28" refid="structcurrsmp__curr_1aba0ca36b18f05fce33c7d785f899578e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structcurrsmp__curr_1aba0ca36b18f05fce33c7d785f899578e" kindref="member">i_a</ref>;</highlight></codeline>
<codeline lineno="30" refid="structcurrsmp__curr_1a8bdd1d6af6ff716be969dbbe56306cc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structcurrsmp__curr_1a8bdd1d6af6ff716be969dbbe56306cc0" kindref="member">i_b</ref>;</highlight></codeline>
<codeline lineno="32" refid="structcurrsmp__curr_1ad78ecbd3ce06bbe93fa12c7d080ab94a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structcurrsmp__curr_1ad78ecbd3ce06bbe93fa12c7d080ab94a" kindref="member">i_c</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*configure)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" kindref="member">currsmp_regulation_cb_t</ref><sp/>regulation_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*get_currents)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcurrsmp__curr" kindref="compound">currsmp_curr</ref><sp/>*curr);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*set_sector)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev,<sp/>uint8_t<sp/>sector);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>(*get_smp_time)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*start)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*stop)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*pause)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*resume)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">device<sp/>*dev);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__spinner__drivers__currsmp_1gaf2f85d962769a3ddb170cec20f1db99f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1gaf2f85d962769a3ddb170cec20f1db99f" kindref="member">currsmp_configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spinner__drivers__currsmp_1gabe5c1c07679b93d4efbb88f30a7f20f4" kindref="member">currsmp_regulation_cb_t</ref><sp/>regulation_cb,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;configure(dev,<sp/>regulation_cb,<sp/>ctx);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="group__spinner__drivers__currsmp_1ga47e66494ce09fe36570899995b8b9ec1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga47e66494ce09fe36570899995b8b9ec1" kindref="member">currsmp_get_currents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcurrsmp__curr" kindref="compound">currsmp_curr</ref><sp/>*curr)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;get_currents(dev,<sp/>curr);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__spinner__drivers__currsmp_1ga7229cb4cb5fd5cc8d427924a0dd50d81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga7229cb4cb5fd5cc8d427924a0dd50d81" kindref="member">currsmp_set_sector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev,<sp/>uint8_t<sp/>sector)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;set_sector(dev,<sp/>sector);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__spinner__drivers__currsmp_1gadaf81f071fa59c5d707eee28a2e14a03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__spinner__drivers__currsmp_1gadaf81f071fa59c5d707eee28a2e14a03" kindref="member">currsmp_get_smp_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;get_smp_time(dev);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__spinner__drivers__currsmp_1ga6cbf8b1465a0876924ba505590f61a74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga6cbf8b1465a0876924ba505590f61a74" kindref="member">currsmp_start</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;start(dev);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="group__spinner__drivers__currsmp_1ga52e2a7e19789e8d9b4733fc12246860b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga52e2a7e19789e8d9b4733fc12246860b" kindref="member">currsmp_stop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;stop(dev);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="group__spinner__drivers__currsmp_1ga8dad1c15188dec6dcbfacead9798b434" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga8dad1c15188dec6dcbfacead9798b434" kindref="member">currsmp_pause</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;pause(dev);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__spinner__drivers__currsmp_1ga69e68b8277e8609a32dd769a315dfbb5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__spinner__drivers__currsmp_1ga69e68b8277e8609a32dd769a315dfbb5" kindref="member">currsmp_resume</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>device<sp/>*dev)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">currsmp_driver_api<sp/>*api<sp/>=<sp/>dev-&gt;api;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;resume(dev);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_SPINNER_DRIVERS_CURRSMP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="spinner/drivers/currsmp.h"/>
  </compounddef>
</doxygen>
